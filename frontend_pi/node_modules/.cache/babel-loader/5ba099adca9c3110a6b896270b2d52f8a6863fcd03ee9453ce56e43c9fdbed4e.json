{"ast":null,"code":"var _jsxFileName = \"D:\\\\tubes\\\\TubesPI\\\\frontend_pi\\\\src\\\\pages\\\\Peternakan.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Peternakan() {\n  _s();\n  const [peternakan, setPeternakan] = useState([]);\n  const [mounted, setMounted] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [namaUser, setNamaUser] = useState();\n\n  // const getData = async () => {\n  //     const token = localStorage.getItem('token');\n  //     const tokenType = localStorage.getItem('token_type');\n  //     try {\n  //       const response = await fetch('http://localhost:8000/api/peternakan', {\n  //         method: 'GET',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //           'Accept': 'application/json',\n  //           'Authorization': 'Bearer ' + token\n  //         }\n  //       });\n\n  //       if (!response.ok) {\n  //         throw new Error('Failed to fetch data');\n  //       }\n\n  //       const data = await response.json();\n  //       if (data && data.data && data.data.peternakan) {\n  //         console.log(data.data.peternakan);\n  //         setPeternakan(data.data.peternakan);\n  //         setTimeout(() => {\n  //           setIsLoading(false);\n  //         }, 1000);\n  //       } else {\n  //         throw new Error('Invalid response data');\n  //       }\n  //     } catch (error) {\n  //       console.log(error);\n  //       // Handle error, display error message, etc.\n  //     }\n  //   }\n\n  const getData = async () => {\n    const token = localStorage.getItem('token');\n    console.log(token);\n    const tokenType = localStorage.getItem('token_type');\n    const response = await fetch('http://localhost:8000/api/peternakan', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    // .then(data => data.json())\n    const data = await response.json();\n    console.log(data.peternakan);\n  };\n  useEffect(() => {\n    if (!mounted) {\n      setMounted(true);\n    } else {\n      getData();\n      setNamaUser(localStorage.getItem('name'));\n    }\n  }, [mounted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"flex justify-center w-auto min-h-fit p-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"grid xl:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-2 max-w-6xl\",\n      children: peternakan.map(tbl_peternakan => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex flex-col bg-gray-200 rounded-lg p-4 m-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex flex-col items-start mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            class: \"block max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n              children: \"Peternakan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"font-normal text-gray-700 dark:text-gray-400\",\n              children: [\"Alamat Peternakan: \", tbl_peternakan.alamat_peternakan]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"font-normal text-gray-700 dark:text-gray-400\",\n              children: [\"Nama Peternakan: \", tbl_peternakan.nama_peternakan]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"font-normal text-gray-700 dark:text-gray-400\",\n              children: [\"No. Telp : \", tbl_peternakan.no_telp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Peternakan, \"ZsY+U7objRFiuYyEHc8glv+Fau4=\");\n_c = Peternakan;\nexport default Peternakan;\nvar _c;\n$RefreshReg$(_c, \"Peternakan\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Peternakan","_s","peternakan","setPeternakan","mounted","setMounted","isLoading","setIsLoading","namaUser","setNamaUser","getData","token","localStorage","getItem","console","log","tokenType","response","fetch","method","headers","data","json","class","children","map","tbl_peternakan","href","fileName","_jsxFileName","lineNumber","columnNumber","alamat_peternakan","nama_peternakan","no_telp","_c","$RefreshReg$"],"sources":["D:/tubes/TubesPI/frontend_pi/src/pages/Peternakan.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Peternakan() {\r\n\r\n    const [peternakan, setPeternakan] = useState([]);\r\n    const [mounted, setMounted] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [namaUser, setNamaUser] = useState();\r\n\r\n    // const getData = async () => {\r\n    //     const token = localStorage.getItem('token');\r\n    //     const tokenType = localStorage.getItem('token_type');\r\n    //     try {\r\n    //       const response = await fetch('http://localhost:8000/api/peternakan', {\r\n    //         method: 'GET',\r\n    //         headers: {\r\n    //           'Content-Type': 'application/json',\r\n    //           'Accept': 'application/json',\r\n    //           'Authorization': 'Bearer ' + token\r\n    //         }\r\n    //       });\r\n      \r\n    //       if (!response.ok) {\r\n    //         throw new Error('Failed to fetch data');\r\n    //       }\r\n      \r\n    //       const data = await response.json();\r\n    //       if (data && data.data && data.data.peternakan) {\r\n    //         console.log(data.data.peternakan);\r\n    //         setPeternakan(data.data.peternakan);\r\n    //         setTimeout(() => {\r\n    //           setIsLoading(false);\r\n    //         }, 1000);\r\n    //       } else {\r\n    //         throw new Error('Invalid response data');\r\n    //       }\r\n    //     } catch (error) {\r\n    //       console.log(error);\r\n    //       // Handle error, display error message, etc.\r\n    //     }\r\n    //   }\r\n\r\n      const getData = async () => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(token);\r\n        const tokenType = localStorage.getItem('token_type');\r\n        const response = await fetch('http://localhost:8000/api/peternakan', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer ' + token\r\n          }\r\n        })\r\n        // .then(data => data.json())\r\n        const data = await response.json()\r\n        console.log(data.peternakan);\r\n      }\r\n\r\n    useEffect(() => {\r\n        if (!mounted) {\r\n            setMounted(true);\r\n        }\r\n        else {\r\n            getData();\r\n            setNamaUser(localStorage.getItem('name'));\r\n        }\r\n    }, [mounted]);\r\n\r\n\r\n    return (\r\n        <div class=\"flex justify-center w-auto min-h-fit p-10\">\r\n            <div class=\"grid xl:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-2 max-w-6xl\">\r\n                {peternakan.map(tbl_peternakan => (\r\n                    <div class=\"flex flex-col bg-gray-200 rounded-lg p-4 m-2\">\r\n                        <div class=\"flex flex-col items-start mt-4\">\r\n                            <a href=\"#\" class=\"block max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\">\r\n                                <h5 class=\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">Peternakan</h5>\r\n                                <p class=\"font-normal text-gray-700 dark:text-gray-400\">Alamat Peternakan: {tbl_peternakan.alamat_peternakan}</p>\r\n                                <p class=\"font-normal text-gray-700 dark:text-gray-400\">Nama Peternakan: {tbl_peternakan.nama_peternakan}</p>\r\n                                <p class=\"font-normal text-gray-700 dark:text-gray-400\">No. Telp : {tbl_peternakan.no_telp}</p>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n \r\n}\r\nexport default Peternakan;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}